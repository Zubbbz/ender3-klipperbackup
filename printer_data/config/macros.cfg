[include test_speed.cfg]

#####################################################################
# Start Print and End Print
######################################################################

# Replace the slicer's custom start and end g-code scripts with
# START_PRINT and END_PRINT. See docs/Slicers.md for more information on using these macros.

[gcode_macro START_PRINT]
gcode:
    M84
    _SET_MPC_MATERIAL MATERIAL={params.MATERIAL}
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
    # Get extruder warm
    M104 S160
    # Wait for bed to reach temperature
    SET_DISPLAY_TEXT MSG="Bed heating..."
    M190 S{BED_TEMP}
    # Use absolute coordinates
    G90
    BED_MESH_CLEAR
    # Home the printer
    SET_DISPLAY_TEXT MSG="Homing..."
    G28
    # BED_MESH_CALIBRATE ADAPTIVE=1
    # Reset the G-Code Z offset (adjust Z offset if needed)
    SET_GCODE_OFFSET Z=0.0
    # SKEW_PROFILE LOAD=3
    
    SET_DISPLAY_TEXT MSG="Parking"
    SMART_PARK
    # Set and wait for nozzle to reach temperature
    SET_DISPLAY_TEXT MSG="Final heating"
    M109 S{EXTRUDER_TEMP}
    SET_DISPLAY_TEXT MSG="Purging"
    LINE_PURGE
    SET_DISPLAY_TEXT
    m300 p300 s1600

[gcode_macro END_PRINT]
gcode:
    TURN_OFF_HEATERS
    M107 # Turn fan off
    
    # Move nozzle away from print while retracting
    G91
    G1 Z10 E-3 F500 # Move up and retract 3mm
    SET_SKEW CLEAR=1

    # Beep
    M300 P300 S1600
    G4 P50
    M300 P300 S1600
    G4 P50
    M300 P300 S1600
    G4 P50
    
    # Move bed forward
    G90
    G1 X0 Y200 F4500
    # Disable steppers
    M84
[gcode_macro NEAR_ZERO]
gcode:
    #Parameters
    {% set z = params.Z|float %}
    G1 X0 Y0 Z{z}

[gcode_macro PRINT_END]
gcode:
    END_PRINT

[gcode_macro PRINT_START]
gcode:
    START_PRINT {rawparams}

[gcode_macro M109] # Wait Hotend Temp
rename_existing: M109.1
gcode:
    #Parameters
    {% set s = params.S|float %}

    M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}  # Set hotend temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s-2} MAXIMUM={s+5}   # Wait for hotend temp (within n degrees)
    {% endif %}

[gcode_macro M300]
gcode:
    # Use a default 1kHz tone if S is omitted.
    {% set S = params.S|default(1000)|int %}
    # Use a 10ms duration is P is omitted.
    {% set P = params.P|default(100)|int %}
    SET_PIN PIN=_BEEPER_pin VALUE=0.5 CYCLE_TIME={ 1.0/S if S > 0 else 1 }
    G4 P{P}
    SET_PIN PIN=_BEEPER_pin VALUE=0

#####################################################################
# KlackEnder- Macros
#####################################################################

[gcode_macro ATTACH_PROBE]
gcode:
    G90
    G1 X247 F4000
    G4 P300
    G1 Z15
    G1 X225

[gcode_macro DETACH_PROBE]
gcode:
    G90
    G1 Z20
    G1 X247 F12000
    G1 Y0 ; Check this against your config of [stepper_y] position_min: ...!
    G1 Z.5
    G4 P300
    G1 X225 F6000
    G1 Z10

[gcode_macro BED_MESH_CALIBRATE] #macro with parameter passing
rename_existing: _BED_MESH_CALIBRATE
gcode:
    ATTACH_PROBE
    _BED_MESH_CALIBRATE {rawparams}
    DETACH_PROBE

[gcode_macro G29] #reliant on the macro above
gcode:
    BED_MESH_CALIBRATE

[gcode_macro SCREWS_TILT_CALCULATE]
rename_existing: _SCREWS_TILT_CALCULATE
gcode:
    M84
    # SET_DOCKABLE_PROBE AUTO_ATTACH_DETACH=0
    G28 ; Should always home before calculation even if already homed
    ATTACH_PROBE
    _SCREWS_TILT_CALCULATE
    DETACH_PROBE
    # SET_DOCKABLE_PROBE AUTO_ATTACH_DETACH=1

[gcode_macro PROBE_CALIBRATE]
rename_existing: _PROBE_CALIBRATE
gcode:
    {% if not 'xyz' in printer.toolhead.homed_axes %}
    G28
    {% endif %}
    ATTACH_PROBE
    G90
    G1 Z20
    G1 X117.5 Y76.5 F12000
    _PROBE_CALIBRATE
    TESTZ Z=20
    M117 Remove the Klack to continue calibration!

[gcode_macro PROBE_ACCURACY]
rename_existing: _PROBE_ACCURACY
gcode:
    {% if not 'xyz' in printer.toolhead.homed_axes %}
    G28
    {% endif %}
    ATTACH_PROBE
    G90
    G1 X117.5 Y76.5 F12000 ; Readjust for center of bed adjusted for probe offset
    _PROBE_ACCURACY
    DETACH_PROBE

[gcode_macro _SET_MPC_MATERIAL]
description: Set heater MPC parameters for a given material
variable_filament_table:
    ## Update this table to adjust material settings
    {
        ## ( density, heat capacity )  # suggested heat capacity range
        "PLA"       : ( 1.25, 2.20 ),  # 1.80 - 2.20
        "PETG"      : ( 1.27, 2.20 ),  # 1.70 - 2.20
        "PC+ABS"    : ( 1.15, 2.20 ),  # 1.50 - 2.20
        "ABS"       : ( 1.06, 2.40 ),  # 1.25 - 2.40
        "ASA"       : ( 1.07, 2.10 ),  # 1.30 - 2.10
        "PA6"       : ( 1.12, 2.50 ),  # 2.00 - 2.50
        "PA"        : ( 1.15, 2.50 ),  # 2.00 - 2.50
        "PC"        : ( 1.20, 1.90 ),  # 1.10 - 1.90
        "TPU"       : ( 1.21, 2.00 ),  # 1.50 - 2.00
        "TPU-90A"   : ( 1.15, 2.00 ),  # 1.50 - 2.00
        "TPU-95A"   : ( 1.22, 2.00 ),  # 1.50 - 2.00
        "ABS-CF"    : ( 1.11, 2.40 ),  # 1.25 - 2.40
        "ASA-CF"    : ( 1.11, 2.10 ),  # 1.30 - 2.10
        "PA6-CF"    : ( 1.19, 2.50 ),  # 2.00 - 2.50
        "PC+ABS-CF" : ( 1.22, 2.20 ),  # 1.50 - 2.20
        "PC+CF"     : ( 1.36, 1.90 ),  # 1.10 - 1.90
        "PLA-CF"    : ( 1.29, 2.20 ),  # 1.80 - 2.20
        "PETG-CF"   : ( 1.30, 2.20 ),  # 1.70 - 2.20
    }
gcode:
    {% set material = params.MATERIAL | upper %}
    {% set heater = params.HEATER | default('extruder') %}
    {% set extruder_config = printer.configfile.settings[heater] %}

    {% if material in filament_table %}
        {% set (density, heat_capacity) = filament_table[material] %}

        RESPOND PREFIX=ðŸ”¥ MSG="Configured {heater} MPC for {material}. Density: {density}, Heat Capacity: {heat_capacity}"
    {% else %}
        {% set density = extruder_config.filament_density %}
        {% set heat_capacity=extruder_config.filament_heat_capacity %}

        RESPOND PREFIX=ðŸ”¥ MSG="Unknown material '{material}', using default mpc parameters for {heater}"
    {% endif %}

    MPC_SET HEATER={heater} FILAMENT_DENSITY={density} FILAMENT_HEAT_CAPACITY={heat_capacity}

[gcode_macro update_git]
gcode:
    {% set message = params.MESSAGE|default() %}
    {% if message %}
        RUN_SHELL_COMMAND CMD=update_git_script_message PARAMS="'{params.MESSAGE}'"
    {% else %}
        RUN_SHELL_COMMAND CMD=update_git_script
    {% endif %}

[gcode_shell_command update_git_script]
command: bash -c "bash $HOME/klipper-backup/script.sh"
timeout: 90.0
verbose: True

[gcode_shell_command update_git_script_message]
command: bash -c "bash $HOME/klipper-backup/script.sh -c \"$0\""
timeout: 90.0
verbose: True

#################################################################
#    KlackEnder- Menu - Only if you have a display installed!   #
# Will error if you don't have a display configured in klipper. #
#                       Remove if unneeded                      #
#################################################################

[menu __main]
type: list
name: Main

[menu __main __KlackEnder]
type: list
enable: True
name: KlackEnder

[menu __main __KlackEnder __AttachProbe]
type: command
name: Attach Probe
gcode:
    ATTACH_PROBE

[menu __main __KlackEnder __DetachProbe]
type: command
name: Detach Probe
gcode:
    DETACH_PROBE

[menu __main __KlackEnder __AutoBedMesh]
type: command
name: Auto Bed Mesh
gcode:
    G28
    BED_MESH_CALIBRATE
	
[menu __main __KlackEnder __ScrewsTiltCalculate]
type: command
name: Screws Tilt Calculate
gcode:
    SCREWS_TILT_CALCULATE
    
[menu __main __KlackEnder __ProbeCalibrate]
type: command
name: Probe Calibrate
gcode:
    PROBE_CALIBRATE